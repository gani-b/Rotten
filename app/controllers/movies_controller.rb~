class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
    
    redirect=false
    @all_ratings=Movie.ratings
    
    if params[:ratings]
       @filter=params[:ratings]
    elsif session[:ratings]
       @filter=session[:ratings]
       redirect=true
    else
       temp=Hash.new()
       @all_ratings.each do |x|
       temp[x]="1"
       end
       @filter=temp
       redirect=true
    end
    
    if params[:sort]
       @sort=params[:sort]
    elsif session[:sort]
       @sort=session[:sort]
       redirect=true
    else
       redirect=false
    end

    if redirect
       flash.keep
       redirect_to movies_path(:sort => @sort,:ratings => @filter) and return
    end
    if @sort=="title" 
    @sortTitle=true
    @movies= Movie.where(:rating => @filter.keys).order(:title)
    elsif @sort=="date"
    @sortDate=true
    @movies= Movie.where(:rating => @filter.keys).order(:release_date)
    else
    @movies = Movie.where(:rating => @filter.keys)
    end
    session[:ratings]=@filter
    session[:sort]=params[:sort]
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
